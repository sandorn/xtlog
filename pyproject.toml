[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "xtlog"
description = "基于 loguru 的高性能日志库"
readme = "README.md"
authors = [{name = "sandorn", email = "sandorn@live.cn"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
]
requires-python = ">=3.8"
dependencies = [
    "loguru>=0.7.0",
]
version = "0.1.7"

[project.urls]
Homepage = "https://github.com/sandorn/xtlog"
Repository = "https://github.com/sandorn/xtlog"
Documentation = "https://github.com/sandorn/xtlog/blob/master/README.md"

[tool.setuptools.packages.find]
where = ["."]
include = ["xtlog*"]
namespaces = false


[tool.ruff]
target-version = "py313"
cache-dir = "D:/TMP/ruff_cache"
preview = true
line-length = 200

[tool.ruff.lint]
select = [
    "B",    # bugbear
    "SIM",  # simplify
    "RUF",  # ruff
    "UP",   # pyupgrade
    "I",    # isort
    "C90",  # mccabe
    "N",    # pep8-naming
    "S",    # bandit
    "T",    # flake8-print
    "F",    # pyflakes
    "E",    # pycodestyle
    "RET",  # flake8-return
    "PT",   # flake8-pytest-style
]

ignore = [
    "A",    # 完全禁用 flake8-annotations
    "ANN",  # 完全禁用 flake8-annotations 扩展
    "E501", # 行超长
    "B006", # 可变默认值
    "RUF002", # 忽略字符串中全角标点警告
    "RUF003", # 忽略字符串中全角标点警告
    "Q000", # 禁用与格式化器冲突的引号规则
    "Q003", # 禁用与格式化器冲突的引号规则
]

# 排除规则
exclude = [
    ".venv", "__pycache__", "build", "dist",
    "migrations", "node_modules", "tests/fixtures",
    "**/generated/*.py", "*.pyc", "*.pyo", "*.pyd",
    "*.so", "*.dll", "*.dylib", "*.egg-info", "*.egg",
    "*.log", "*.tmp", "*.bak", "old_code/**"
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test/**" = ["S101", "T201"]
"tests/**" = ["S101", "T201"]
"examples/**" = ["T201", "F401"]

[tool.ruff.format]
indent-style = "space"
quote-style = "single"
docstring-code-format = true
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.13"
cache_dir = "D:/TMP/mypt_cache/"
show_error_codes = true
show_column_numbers = true
check_untyped_defs = true
disallow_incomplete_defs = false
disallow_untyped_defs = false
disallow_untyped_decorators = false
implicit_optional = false
strict_equality = false
strict_optional = true

exclude = [
    ".git", "__pycache__", ".venv", "venv", 
    ".mypy_cache", "build", "dist", "migrations",
    "node_modules", "tests/fixtures", "old_code"
]

[[tool.mypy.overrides]]
module = "tkinter.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "pandas.*"
ignore_errors = false

[[tool.mypy.overrides]]
module = "numpy.*"
ignore_errors = false

[tool.basedpyright]
pythonVersion = "3.13"
typeCheckingMode = "basic"
reportMissingImports = "error"
reportUnusedImport = "none"
reportUnusedVariable = "warning"
reportExplicitAny = "none"
reportAny = "none"
reportUnannotatedClassAttribute = "none"

exclude = [
    "**/tests/**",
    "**/test_*", 
    "**/__pycache__/**",
    "**/.git/**",
    "**/migrations/**",
    "**/node_modules/**",
    "**/old_code/**"
]
